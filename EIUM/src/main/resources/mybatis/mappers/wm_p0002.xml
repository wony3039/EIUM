<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.wm_p0002">
	<resultMap id="p0002Result" type="WM_P0002VO">
	    <result property="EMPLOYEE_NAME" column="EMPLOYEE_NAME" />
		<result property="EMPLOYEE_CODE" column="EMPLOYEE_CODE" />
		<result property="DEPARTMENT_NAME" column="DEPARTMENT_NAME" />
	    <result property="DEPARTMENT_CODE" column="DEPARTMENT_CODE" />
		
		<result property="POSITION_CODE" column="POSITION_CODE" />
		<result property="POSITION_NAME" column="POSITION_NAME" />
		<result property="VACATION_CODE" column="VACATION_CODE" />
		<result property="VACATION_TYPE" column="VACATION_TYPE" />
		<result property="VACATION_START_DATE" column="VACATION_START_DATE" />
		<result property="VACATION_END_DATE" column="VACATION_END_DATE" />
		<result property="VACATION_APPLY_DATE" column="VACATION_APPLY_DATE" />
		<result property="BEFORE_VACATION_REMAIN_DATE" column="BEFORE_VACATION_REMAIN_DATE" />
		<result property="VACATION_REMAIN_DATE" column="VACATION_REMAIN_DATE" />
		<result property="AFTER_VACATION_REMAIN_DATE" column="AFTER_VACATION_REMAIN_DATE" />
		
	    <result property="SITE_NAME" column="SITE_NAME" />
	    <result property="SITE_CODE" column="SITE_CODE" />
		
		
	</resultMap>
	<select id="searchEmployeeList" resultMap="p0002Result" parameterType="java.util.List">
	  <![CDATA[
         SELECT e.employee_code, e.employee_name, d.department_name, p.position_name, vr.vacation_remain_date
         FROM employee e LEFT OUTER JOIN employee_work ew ON ew.employee_code = e.employee_code
                         LEFT OUTER JOIN department d ON ew.department_code = d.department_code
                         LEFT OUTER JOIN position p ON ew.position_code = p.position_code
                         LEFT OUTER JOIN vacation_remain vr ON ew.employee_code = vr.employee_code
         ORDER BY e.employee_code
      ]]>
	</select>

	<select id="searchList" resultMap="p0002Result" parameterType="java.util.List">
      <![CDATA[
         SELECT vh.vacation_code, e.employee_code, e.employee_name, d.department_name, p.position_name, vh.vacation_type, vh.VACATION_START_DATE, vh.VACATION_END_DATE, vh.VACATION_APPLY_DATE, vh.BEFORE_VACATION_REMAIN_DATE, vh.AFTER_VACATION_REMAIN_DATE
         FROM employee e, employee_work ew, department d, position p, vacation_remain vr, vacation_change_history vh, site s
         WHERE ew.employee_code = e.employee_code
         and ew.employee_code = vr.employee_code
         and ew.employee_code = vh.employee_code
         and ew.department_code = d.department_code
         and ew.position_code = p.position_code
         and d.site_code = s.site_code
      ]]>
     
    <choose>
	  <when test="date != null and date !='' ">
	  and SUBSTR(TO_DATE(SUBSTR(VACATION_START_DATE,1,6), 'YYYY-MM'),1,5) <![CDATA[<=]]> #{date,jdbcType=VARCHAR}
	  and SUBSTR(TO_DATE(SUBSTR(VACATION_END_DATE,1,6), 'YYYY-MM'),1,5) <![CDATA[>=]]> #{date,jdbcType=VARCHAR}
	  </when>
	</choose>
	
	<choose>
	  <when test="vacaTYPE != null and vacaTYPE !='' ">
	  and vacation_type = #{vacaTYPE}
	  </when>
	</choose>
	
	<choose>
	  <when test="SiteList != null and SiteList !='' ">
      and s.site_name=#{SiteList}
	  </when>
	</choose>
	
	<choose>
	  <when test="DeptList != null and DeptList !='' ">
      and d.department_name=#{DeptList}
	  </when>
	</choose>
	
	<choose>
	  <when test="Employee_Select.equals('employee_name') and p_text != null and p_text !='' ">
      and e.employee_name LIKE <![CDATA['%'||#{p_text,jdbcType=VARCHAR}||'%']]>
	  </when>
	</choose>
	
	<choose>
	  <when test="Employee_Select.equals('employee_code') and p_text != null and p_text !='' ">
      and e.employee_code LIKE <![CDATA['%'||#{p_text,jdbcType=VARCHAR}||'%']]>
	  </when>
	</choose>
	
	<choose>
		  <when test="access_range == '부서' ">
      and d.department_code = #{Sdepartment_code}
      	  </when>
	</choose>
	
	<choose>
	  <when test="access_range == '사원' ">
      and e.employee_code = #{Semployee_code}
	  </when>
	</choose>
	
	order by vh.VACATION_END_DATE DESC
     
     
	</select>
	
	<insert id="insertData" parameterType="java.util.Map">
		insert into VACATION_CHANGE_HISTORY(VACATION_CODE, EMPLOYEE_CODE, BEFORE_VACATION_REMAIN_DATE, VACATION_TYPE, VACATION_START_DATE, VACATION_END_DATE, VACATION_APPLY_DATE, AFTER_VACATION_REMAIN_DATE,int_user_id, int_date)
		 values(VACATION_CODE_SEQ.NEXTVAL, #{employee_CODE}, #{before_VACATION_REMAIN_DATE}, #{vacation_TYPE}, #{vacation_START_DATE}, #{vacation_END_DATE}, #{vacation_APPLY_DATE}, #{after_VACATION_REMAIN_DATE},#{user},sysdate)
	</insert>
	
	<update id="updateData" parameterType="java.util.Map">
		MERGE INTO VACATION_REMAIN
            USING DUAL
            ON (EMPLOYEE_CODE = #{employee_CODE})
            WHEN MATCHED THEN
                      UPDATE SET VACATION_REMAIN_DATE = #{after_VACATION_REMAIN_DATE}
                      , upt_user_id = #{user, jdbcType=VARCHAR}
                      , upt_date = sysdate
            WHEN NOT MATCHED THEN
                      insert (EMPLOYEE_CODE, VACATION_REMAIN_DATE,int_user_id, int_date)
                            values(#{employee_CODE}, #{after_VACATION_REMAIN_DATE},#{user},sysdate)
	</update>
	
	<update id="updateData2" parameterType="java.util.Map">
		update VACATION_CHANGE_HISTORY
		set BEFORE_VACATION_REMAIN_DATE = #{before_VACATION_REMAIN_DATE, jdbcType=VARCHAR}
			, VACATION_TYPE = #{vacation_TYPE, jdbcType=VARCHAR}
			, VACATION_START_DATE = #{vacation_START_DATE, jdbcType=VARCHAR}
			, VACATION_END_DATE = #{vacation_END_DATE, jdbcType=VARCHAR}
			, VACATION_APPLY_DATE = #{vacation_APPLY_DATE, jdbcType=VARCHAR}
			, upt_user_id = #{user, jdbcType=VARCHAR}
            , upt_date = sysdate
		where VACATION_CODE = #{vacation_CODE, jdbcType=VARCHAR}
	</update>
	
	<delete id="deleteData" parameterType="java.util.Map">
		delete VACATION_CHANGE_HISTORY
		where VACATION_CODE = #{vacation_CODE}
	</delete>
	
	<update id="updateData3" parameterType="java.util.Map">
		update VACATION_remain
		set VACATION_REMAIN_DATE = VACATION_REMAIN_DATE + #{vacation_APPLY_DATE}
		, upt_user_id = #{user, jdbcType=VARCHAR}
        , upt_date = sysdate
		where employee_code = #{employee_CODE}
	</update>


</mapper>